Find out how to initialise the random number generator with a known value.
    This would mean I can print out the seed for my RNG, and if a test fails I
    can reproduce it (text printed to stdout is ignored when running tests
    unless the test fails).
    Places where I need to do this

Options for making graphs in Rust:
    Some writing on the subject
        https://github.com/nrc/r4cppp/blob/master/graphs/README.md
        http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/
    Rc<RefCell<>> (or Rc<RwLock<>>)
    Store everything in an arena (e.g. libarena)
    Instead of having references, use indices into a Vec<T> to access the data.


Things to check out:

    Why did vector.clone() not give me a vector with different data behind it
    when called in the normal code from the test, but it is working when called
    in the normal code or when called in the test.
        Double check the details of this problem -- make sure it's not just
        me getting confused with a new programming language.

    How can I tell rust to print something on ^C interupt without installing
    signal handlers.
        I don't even know how to install signal handles in rust (as yet), but I
        just want to print a message to the console if the user presses ^C in
        the middle of one of my long-running tests.

        i.e. i'm looking for a flag to pass to Cargo to inform me of the
        progress that was made before I cancelled the tests.
