Make convenience functions for seeded_rng()
    In the rand:: crate there is the convenience function rand::random() that
    just gives you a single random number without having to generate a Rng
    structure.
    I wonder if it would be nice to create an analagous function in
    test_utils:: that creates a single random value from a seeded Rng
    structure.
    
    This would make some code look better with the downside that messegase may
    be printed out more than once.
    
    If there is some way to not print out messages more than once (maybe with
    std::sync::Once) then this could be pretty useful).

Options for making graphs in Rust:
    Some writing on the subject
        https://github.com/nrc/r4cppp/blob/master/graphs/README.md
        http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/
    Rc<RefCell<>> (or Rc<RwLock<>>)
    Store everything in an arena (e.g. libarena)
    Instead of having references, use indices into a Vec<T> to access the data.


Things to check out:

    Why did vector.clone() not give me a vector with different data behind it
    when called in the normal code from the test, but it is working when called
    in the normal code or when called in the test.
        Double check the details of this problem -- make sure it's not just
        me getting confused with a new programming language.

    How can I tell rust to print something on ^C interupt without installing
    signal handlers.
        I don't even know how to install signal handles in rust (as yet), but I
        just want to print a message to the console if the user presses ^C in
        the middle of one of my long-running tests.

        i.e. i'm looking for a flag to pass to Cargo to inform me of the
        progress that was made before I cancelled the tests.
