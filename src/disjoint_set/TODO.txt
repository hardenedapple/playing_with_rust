Internal Mutability:
Implement union()

TODO
Currently I have the Parent enum and the parent member of BaseNode as public.
This is just for tests, I don't need them as public to satisfy the API I want.
Hence I should read up on the dynamics of rust testing and see what I can do about removing the
public declarations.

Order of working on this:
     Make a working single-threaded version of the program.
     Make it multi-threaded.
     Add tests to check the multi-threaded capabilities.
         (hopefully try and manually specify the order that hypothetical threads would run
         different functions, probably just throw a load of threads at the problem and see if
         anything breaks).
      Implement Kruskal's algorithm (as a test)

Using External Mutability and Raw pointers
